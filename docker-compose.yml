services:

  dnsdist-in:
    image: powerdns/dnsdist-19:latest
    volumes:
      - ./dnsdist/dnsdist-in.conf:/etc/dnsdist/dnsdist.conf
      - ./ssl/certs:/opt/certs
    ports:
      - "5053:53/udp"
      - "5053:53/tcp"
      - "5443:443"
      - "5853:853"
    networks:
      - webnet

  dnsdist-out:
    image: powerdns/dnsdist-19:latest
    volumes:
      - ./dnsdist/dnsdist-out.conf:/etc/dnsdist/dnsdist.conf
      - ./ssl/certs:/opt/certs
    ports:
      - "6053:53/udp"
      - "6053:53/tcp"
      - "6443:443"
      - "6853:853"
    networks:
      - webnet

  pihole:
    container_name: pihole
    image: pihole/pihole:latest
    ports:
      # DNS Ports
      - "5153:53/tcp"
      - "5153:53/udp"
      # Default HTTP Port
      # - "5180:80/tcp"
      # Default HTTPs Port. FTL will generate a self-signed certificate
      # - "443:443/tcp"
      # Uncomment the below if using Pi-hole as your DHCP Server
      #- "67:67/udp"
    environment:
      # Set the appropriate timezone for your location (https://en.wikipedia.org/wiki/List_of_tz_database_time_zones), e.g:
      TZ: 'America/Los_Angeles'
      # Set a password to access the web interface. Not setting one will result in a random password being assigned
      FTLCONF_webserver_api_password: 'correct horse battery staple'
      # If using Docker's default `bridge` network setting the dns listening mode should be set to 'all'
      FTLCONF_dns_listeningMode: 'all'
      FTLCONF_dns_upstreams: '8.8.8.8;8.8.4.4'
    # Volumes store your data between container upgrades
    volumes:
      # For persisting Pi-hole's databases and common configuration file
      - './etc-pihole:/etc/pihole'
      # Uncomment the below if you have custom dnsmasq config files that you want to persist. Not needed for most starting fresh with Pi-hole v6. If you're upgrading from v5 you and have used this directory before, you should keep it enabled for the first v6 container start to allow for a complete migration. It can be removed afterwards. Needs environment variable FTLCONF_misc_etc_dnsmasq_d: 'true'
      #- './etc-dnsmasq.d:/etc/dnsmasq.d'
    cap_add:
      # See https://github.com/pi-hole/docker-pi-hole#note-on-capabilities
      # Required if you are using Pi-hole as your DHCP server, else not needed
      # - NET_ADMIN
      # Required if you are using Pi-hole as your NTP client to be able to set the host's system time
      - SYS_TIME
      # Optional, if Pi-hole should get some more processing time
      - SYS_NICE
    labels:
      - "traefik.enable=true"  # Explicitly enable Traefik for this container
      - "traefik.http.routers.pihole.rule=Host(`localhost`)"
      - "traefik.http.routers.pihole.tls.certresolver=myresolver"
      - "traefik.http.services.pihole.loadbalancer.server.port=80"
    restart: unless-stopped
    networks:
      - webnet

  traefik:
    image: traefik:v3.3
    container_name: traefik
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedByDefault=false"  # Only expose containers with 'traefik.enable=true'
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.websecure.http.tls=true"
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"  # Redirect HTTP to HTTPS
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"  # Use HTTPS
      - "--certificatesresolvers.myresolver.tailscale=true"
      - "--accesslog=true"
    networks:
      - webnet
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/run/tailscale/tailscaled.sock:/var/run/tailscale/tailscaled.sock

networks:
  webnet:
